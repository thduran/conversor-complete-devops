name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  IMAGE_NAME: thiagoduran/conversor-complete-devops

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Code checkout
      uses: actions/checkout@v3

    - name: Configure Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt

    #- name: Run tests
    #  run: PYTHONPATH=. pytest

    - name: Docker Login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Docker Build & Push
      run: |
        IMAGE_TAG=${GITHUB_SHA::8} # usa os 8 primeiros chars do commit
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
        docker build -t $IMAGE_NAME:$IMAGE_TAG .
        docker push $IMAGE_NAME:$IMAGE_TAG
        docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:latest
        docker push $IMAGE_NAME:latest


  staging-deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: http://129.212.146.29 # ajuste o IP/hostname real

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DO_ACCESS_TOKEN }}

    - name: Setup kubeconfig
      run: |
        echo "${{ secrets.CLUSTER_KUBECONFIG }}" | base64 --decode > kubeconfig
        echo "KUBECONFIG=$(pwd)/kubeconfig" >> $GITHUB_ENV

    - name: Test connection
      run: |
        kubectl get nodes

    - name: Deploy to Staging
      run: |
        kubectl apply -f k8s/base/staging

        kubectl set image deployment/conversor conversor=$IMAGE_NAME:${{ env.IMAGE_TAG }} -n staging
        

  production-deploy:
    needs: [build-and-test, staging-deploy]
    runs-on: ubuntu-latest
    environment:
      name: production
      url: http://134.199.241.251 # ajuste o IP/hostname real
      # Configure no GitHub para exigir aprovação manual neste ambiente!

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Test connection
      run: |
        kubectl get nodes

    - name: Setup kubeconfig
      run: |
        echo "${{ secrets.CLUSTER_KUBECONFIG }}" | base64 --decode > kubeconfig

    - name: Deploy to Production
      run: |
        kubectl apply -f k8s/base/production

        kubectl set image deployment/conversor-deployment conversor=$IMAGE_NAME:${{ env.IMAGE_TAG }} -n production